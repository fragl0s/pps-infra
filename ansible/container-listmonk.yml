---
- name: Create Listmonk network
  become: true
  docker_network:
    name: net-listmonk
    attachable: true
    internal: true

- name: Clone Listmonk templates
  become: true
  ansible.builtin.git:
    repo: 'https://github.com/ppschweiz/listmonk-templates.git'
    dest: /var/srv/files/listmonk/static
    version: main

- name: start listmonk postgresql container
  become: true
  docker_container:
    image: "postgres:17-alpine"
    name: "listmonk-postgres"
    state: started
    restart_policy: always
    pull: true
    networks_cli_compatible: true
    networks:
      - name: net-listmonk
    ulimits: nofile:4096:32768
    volumes:
      - /var/srv/postgresql/listmonk:/var/lib/postgresql/data:Z
    env:
      POSTGRES_PASSWORD="{{ lookup('hashi_vault', 'secret=secret/listmonk/postgresql/password:value') }}"
      POSTGRES_USER="listmonk"
      POSTGRES_DB="listmonk"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U listmonk"]
      interval: 10s
      timeout: 5s
      retries: 6

- name: start listmonk container
  become: true
  docker_container:
    image: "listmonk/listmonk:v4.1.0"
    name: "listmonk"
    labels:
      "traefik.enable": "true"
      "traefik.entryPoint": "https"
      "traefik.http.routers.listmonk.rule": "Host(`newsletter.piratenpartei.ch`)"
      "traefik.http.routers.listmonk.tls.certresolver": "le"
      "traefik.http.routers.listmonk.tls": "true"
      "traefik.http.routers.listmonk.middlewares": "security-headers@file"
    state: started
    command: [sh, -c, "./listmonk --install --idempotent --yes --config '' && ./listmonk --upgrade --yes --config '' && ./listmonk --config '' --static-dir=/listmonk/static"]
                                                              # --config (file) param is set to empty so that listmonk only uses the env vars (below) for config.
                                                              # --install --idempotent ensures that DB installation happens only once on an empty DB, on the first ever start.
                                                              # --upgrade automatically runs any DB migrations when a new image is pulled.
    pull: true
    networks_cli_compatible: true
    networks:
      - name: net-proxy
      - name: net-listmonk
    hostname: newsletter.piratenpartei.ch
    restart_policy: always
    volumes:
      - /var/srv/files/listmonk/uploads:/listmonk/uploads:z
      - /var/srv/files/listmonk/static:/listmonk/static:ro,z
    env:
      LISTMONK_app__address="0.0.0.0:9000"
      LISTMONK_db__host="listmonk-postgres"
      LISTMONK_db__port=5432
      LISTMONK_db__user="listmonk"
      LISTMONK_db__password="{{ lookup('hashi_vault', 'secret=secret/listmonk/postgresql/password:value') }}"
      LISTMONK_db__database="listmonk"
      LISTMONK_db__ssl_mode="disable"
      LISTMONK_db__max_open=25
      LISTMONK_db__max_idle=25
      LISTMONK_db__max_lifetime="300s"
      TZ="Europe/Zurich"

- name: start backup container for listmonk postgresql
  become: true
  docker_container:
    image: prodrigestivill/postgres-backup-local
    name: "listmonk-backup"
    state: started
    restart_policy: always
    pull: true
    networks_cli_compatible: true
    networks:
      - name: net-listmonk
    volumes:
      - /var/srv/pgsql-backup/listmonk:/backups:Z
    env:
      POSTGRES_HOST="listmonk-postgres"
      POSTGRES_DB="listmonk"
      POSTGRES_USER="listmonk"
      POSTGRES_PASSWORD="{{ lookup('hashi_vault', 'secret=secret/listmonk/postgresql/password:value') }}"
      SCHEDULE=@daily
      BACKUP_KEEP_DAYS=3
      BACKUP_KEEP_WEEKS=0
      BACKUP_KEEP_MONTHS=0
